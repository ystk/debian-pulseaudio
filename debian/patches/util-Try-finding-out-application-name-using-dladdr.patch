commit 704c96985be104396b86f6b2c0a96827b9d90501
Author: Felipe Sateler <fsateler@debian.org>
Date:   Thu Aug 14 00:43:00 2014 -0400

    util: Try finding out application name using dladdr if available
    
    This fixes getting the binary name in the Hurd, or any other port using
    the GNU C library, but only in the case where the library is directly
    linked to. Opening with dlopen will not work.
    
    Change since last version: use a weak reference to main, so that we
    don't crash when main cannot be found.

--- a/configure.ac
+++ b/configure.ac
@@ -574,6 +574,8 @@ AC_SYS_LARGEFILE
 # Check for open64 to know if the current system does have open64() and similar functions
 AC_CHECK_FUNCS_ONCE([open64])
 
+AC_SEARCH_LIBS([dladdr], [dl], [HAVE_DLADDR=1], [HAVE_DLADDR=0])
+AC_DEFINE(HAVE_DLADDR, [1], [Have dladdr?])
 
 ###################################
 #      External libraries         #
--- a/src/pulse/util.c
+++ b/src/pulse/util.c
@@ -24,6 +24,10 @@
 #include <config.h>
 #endif
 
+#ifndef _GNU_SOURCE
+#define _GNU_SOURCE 1
+#endif
+
 #include <errno.h>
 #include <limits.h>
 #include <stdio.h>
@@ -32,6 +36,7 @@
 #include <time.h>
 #include <unistd.h>
 #include <sys/types.h>
+#include <dlfcn.h>
 
 #ifdef HAVE_PWD_H
 #include <pwd.h>
@@ -64,6 +69,10 @@
 
 #include "util.h"
 
+#if defined(HAVE_DLADDR) && defined(PA_GCC_WEAKREF)
+static int _main() PA_GCC_WEAKREF(main);
+#endif
+
 char *pa_get_user_name(char *s, size_t l) {
     const char *p;
     char *name = NULL;
@@ -205,6 +214,21 @@ char *pa_get_binary_name(char *s, size_t
         }
     }
 #endif
+
+#if defined(HAVE_DLADDR) && defined(PA_GCC_WEAKREF)
+    {
+        Dl_info info;
+        if(_main) {
+            int err = dladdr(&_main, &info);
+            if (err != 0) {
+                char *p = pa_realpath(info.dli_fname);
+                if (p) {
+                    return p;
+                }
+            }
+        }
+    }
+#endif
 
 #if defined(HAVE_SYS_PRCTL_H) && defined(PR_GET_NAME)
     {
